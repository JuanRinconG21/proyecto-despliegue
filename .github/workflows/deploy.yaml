name: Deploy 
on: push
jobs:
  #Definir el job
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [16, 18, 20]
    #Para servicios usar DockerHub
    #services:
    #redis:
    #  image: redis
    #  ports:
    #    - 6379:6379
    #Pasos que se van a ejecutar
    steps:
      #Instalar Redis
      #- name: Instalar Redis
      #   run: sudo apt-get update -y && sudo apt-get install redis-tools -y
      #Probar Redis
      #- name: Test Redis
      #  run: redis-cli -h localhost -p 6379 ping
      #Mostrar variables o Secretos
      - name: Mostrar Variables
        run: echo "El secreto es ${{ secrets.TOKEN_GIT }}"
      #Clonar el repositorio
      - name: Clonar repositorio
        uses: actions/checkout@v4
      #Instalar Node sin necesidad de Docker todo se encuentra en Merkaplace
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      #Intalar dependencias
      - name: Install dependencies
        run: npm install
      #Ejecutar los tests
      - name: Run tests
        run: npm run test
      #Generar el build
      - name: Build
        run: npm run build
      
      #Crear artefacto
      - name: Crear Artifact
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.node == '18' }}  
        uses: actions/upload-pages-artifact@v3
        with:
          path: public/
  
  deploy:
    needs: build
    
    permissions:
      pages: write      
      id-token: write   
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
  
  #CREAR CUENTA DE SLACK PARA PROBAR
  # notify:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   if:  always()
  #   steps:
  #     - name: Notify Slack
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         status: ${{ job.status }}
  #         fields: ${{ github.actor }}
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}